openapi: 3.0.3
info:
  title: Valora MCP Server API
  description: |
    # Valora MCP Server API Documentation
    
    The Valora MCP Server provides a secure, scalable Memory Container Protocol implementation
    with enterprise-grade features including API key management, integrations, and chat continuity.
    
    ## Features
    
    - **Memory Management**: Store, retrieve, and search memories
    - **Chat Continuity**: Import and export conversations for AI agents
    - **Integration System**: Webhooks and plugins for external services
    - **Security**: API key authentication with permissions and rate limiting
    - **Monitoring**: Health checks and usage statistics
    
    ## Authentication
    
    All API endpoints require authentication using API keys. Include your API key in the
    Authorization header:
    
    ```
    Authorization: Bearer your-api-key
    ```
    
    ## Rate Limiting
    
    API requests are rate-limited per API key:
    - Default: 100 requests per minute, 1000 per hour
    - Configurable per API key
    - Rate limit headers included in responses
    
    ## Error Handling
    
    The API uses standard HTTP status codes and returns detailed error messages:
    - `400` - Bad Request (invalid input)
    - `401` - Unauthorized (invalid API key)
    - `403` - Forbidden (insufficient permissions)
    - `404` - Not Found (resource doesn't exist)
    - `429` - Too Many Requests (rate limit exceeded)
    - `500` - Internal Server Error
    
  version: 1.0.0
  contact:
    name: Valora Support
    email: support@valora.com
    url: https://github.com/valora/mcp-server
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.valora.com/v1
    description: Production server
  - url: http://localhost:3000
    description: Development server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health Check
      description: Check if the Valora MCP Server is running and healthy
      tags:
        - System
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Valora MCP Server is running."
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-12-19T10:30:00Z"
                  version:
                    type: string
                    example: "1.0.0"
                  environment:
                    type: string
                    example: "production"
        '500':
          description: Server is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api-keys/test:
    get:
      summary: Test API Key Authentication
      description: Test if your API key is valid and get information about your permissions
      tags:
        - Authentication
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: API key is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    example: true
                  apiKey:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "key_123456789"
                      name:
                        type: string
                        example: "Production API Key"
                      permissions:
                        type: array
                        items:
                          type: string
                        example: ["read", "write", "integrations"]
                      createdAt:
                        type: string
                        format: date-time
                      lastUsed:
                        type: string
                        format: date-time
                  user:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "api-key"
                      id:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
                  timestamp:
                    type: string
                    format: date-time
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api-keys/me:
    get:
      summary: Get Current API Key Info
      description: Get information about your current API key
      tags:
        - Authentication
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: API key information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api-keys/me/stats:
    get:
      summary: Get API Key Usage Statistics
      description: Get usage statistics for your current API key
      tags:
        - Authentication
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Usage statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalRequests:
                    type: integer
                    example: 1250
                  requestsLastHour:
                    type: integer
                    example: 45
                  requestsLastDay:
                    type: integer
                    example: 320
                  averageResponseTime:
                    type: number
                    format: float
                    example: 45.2
                  errorRate:
                    type: number
                    format: float
                    example: 0.02
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /memory/{id}:
    get:
      summary: Get Memory
      description: Retrieve a specific memory by ID
      tags:
        - Memory
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Memory ID
          schema:
            type: string
            example: "memory_123456789"
      responses:
        '200':
          description: Memory retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memory'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Memory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /memory:
    post:
      summary: Create Memory
      description: Create a new memory
      tags:
        - Memory
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: Memory content
                  example: "This is a new memory about AI and machine learning"
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags for categorizing the memory
                  example: ["ai", "machine-learning", "important"]
                metadata:
                  type: object
                  description: Additional metadata
                  example:
                    source: "chat-import"
                    confidence: 0.95
      responses:
        '201':
          description: Memory created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memory'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /memory/search:
    get:
      summary: Search Memories
      description: Search memories by content, tags, or metadata
      tags:
        - Memory
      security:
        - ApiKeyAuth: []
      parameters:
        - name: query
          in: query
          required: true
          description: Search query
          schema:
            type: string
            example: "machine learning"
        - name: tags
          in: query
          description: Filter by tags
          schema:
            type: string
            example: "ai,important"
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Memory'
                  total:
                    type: integer
                    example: 25
                  limit:
                    type: integer
                    example: 10
                  offset:
                    type: integer
                    example: 0
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chat/import:
    post:
      summary: Import Chat Conversation
      description: Import a chat conversation for storage and processing
      tags:
        - Chat
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatImportRequest'
      responses:
        '201':
          description: Chat imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "chat_123456789"
                  message:
                    type: string
                    example: "Chat conversation imported successfully"
                  memoryCount:
                    type: integer
                    example: 15
        '400':
          description: Invalid chat data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chat/export:
    post:
      summary: Export Chat Conversation
      description: Export a chat conversation for use in other AI agents
      tags:
        - Chat
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - conversationId
              properties:
                conversationId:
                  type: string
                  description: ID of the conversation to export
                  example: "chat_123456789"
                format:
                  type: string
                  description: Export format
                  enum: [json, markdown, plaintext]
                  default: json
      responses:
        '200':
          description: Chat exported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversationId:
                    type: string
                    example: "chat_123456789"
                  format:
                    type: string
                    example: "json"
                  data:
                    type: object
                    description: Exported conversation data
        '404':
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /integrations/status:
    get:
      summary: Get Integration Status
      description: Get status of all integrations (webhooks and plugins)
      tags:
        - Integrations
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Integration status
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhooks:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 5
                      enabled:
                        type: integer
                        example: 3
                      disabled:
                        type: integer
                        example: 2
                  plugins:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 2
                      enabled:
                        type: integer
                        example: 1
                      disabled:
                        type: integer
                        example: 1
                  events:
                    type: array
                    items:
                      type: string
                    example:
                      - "memory.created"
                      - "memory.updated"
                      - "memory.deleted"
                      - "chat.imported"
                      - "search.performed"
                      - "export.completed"
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /integrations/webhooks:
    get:
      summary: List Webhooks
      description: Get all registered webhooks
      tags:
        - Integrations
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Register Webhook
      description: Register a new webhook for event notifications
      tags:
        - Integrations
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
                - events
              properties:
                url:
                  type: string
                  format: uri
                  description: Webhook URL
                  example: "https://api.example.com/webhooks/valora"
                events:
                  type: array
                  items:
                    type: string
                    enum:
                      - "memory.created"
                      - "memory.updated"
                      - "memory.deleted"
                      - "chat.imported"
                      - "search.performed"
                      - "export.completed"
                  description: Events to subscribe to
                  example: ["memory.created", "chat.imported"]
                headers:
                  type: object
                  description: Additional headers to include
                  example:
                    "X-Custom-Header": "custom-value"
                retryPolicy:
                  type: object
                  properties:
                    maxRetries:
                      type: integer
                      default: 3
                    backoffMs:
                      type: integer
                      default: 1000
                    timeoutMs:
                      type: integer
                      default: 5000
                enabled:
                  type: boolean
                  default: true
      responses:
        '201':
          description: Webhook registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          description: Invalid webhook configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /integrations/webhooks/{id}:
    get:
      summary: Get Webhook
      description: Get details of a specific webhook
      tags:
        - Integrations
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Webhook ID
          schema:
            type: string
      responses:
        '200':
          description: Webhook details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '404':
          description: Webhook not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update Webhook
      description: Update webhook configuration
      tags:
        - Integrations
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Webhook ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                events:
                  type: array
                  items:
                    type: string
                headers:
                  type: object
                retryPolicy:
                  type: object
                enabled:
                  type: boolean
      responses:
        '200':
          description: Webhook updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '404':
          description: Webhook not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete Webhook
      description: Delete a webhook
      tags:
        - Integrations
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Webhook ID
          schema:
            type: string
      responses:
        '200':
          description: Webhook deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Webhook deleted successfully"
        '404':
          description: Webhook not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /integrations/validr/sync:
    post:
      summary: Sync to Validr
      description: Sync memory or conversation data to Validr platform
      tags:
        - Integrations
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memory
              properties:
                memory:
                  $ref: '#/components/schemas/Memory'
                action:
                  type: string
                  enum: [created, updated, deleted]
                  default: created
      responses:
        '200':
          description: Sync completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Synced to Validr successfully"
                  data:
                    type: object
                    description: Synced data
                  timestamp:
                    type: string
                    format: date-time
        '400':
          description: Invalid sync data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API key for authentication

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid API key"
        code:
          type: string
          description: Error code
          example: "INVALID_API_KEY"
        details:
          type: object
          description: Additional error details

    ApiKey:
      type: object
      properties:
        id:
          type: string
          example: "key_123456789"
        name:
          type: string
          example: "Production API Key"
        key:
          type: string
          example: "val_abc123...def456"
        permissions:
          type: array
          items:
            type: string
          example: ["read", "write", "integrations"]
        createdAt:
          type: string
          format: date-time
        lastUsed:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        isActive:
          type: boolean
          example: true
        rateLimit:
          type: object
          properties:
            requestsPerMinute:
              type: integer
              example: 100
            requestsPerHour:
              type: integer
              example: 1000

    Memory:
      type: object
      properties:
        id:
          type: string
          example: "memory_123456789"
        content:
          type: string
          example: "This is a memory about AI and machine learning"
        tags:
          type: array
          items:
            type: string
          example: ["ai", "machine-learning", "important"]
        metadata:
          type: object
          properties:
            source:
              type: string
              example: "chat-import"
            confidence:
              type: number
              format: float
              example: 0.95
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    ChatImportRequest:
      type: object
      required:
        - conversation
      properties:
        conversation:
          type: object
          properties:
            id:
              type: string
              example: "chat_123456789"
            title:
              type: string
              example: "AI Discussion"
            messages:
              type: array
              items:
                type: object
                properties:
                  role:
                    type: string
                    enum: [user, assistant, system]
                  content:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
            metadata:
              type: object
              properties:
                source:
                  type: string
                  example: "slack"
                participants:
                  type: array
                  items:
                    type: string
                  example: ["user1", "user2"]
        format:
          type: string
          enum: [json, markdown, plaintext]
          default: json

    Webhook:
      type: object
      properties:
        id:
          type: string
          example: "webhook_123456789"
        url:
          type: string
          format: uri
          example: "https://api.example.com/webhooks/valora"
        events:
          type: array
          items:
            type: string
          example: ["memory.created", "chat.imported"]
        headers:
          type: object
          example:
            "X-Custom-Header": "custom-value"
        retryPolicy:
          type: object
          properties:
            maxRetries:
              type: integer
              example: 3
            backoffMs:
              type: integer
              example: 1000
            timeoutMs:
              type: integer
              example: 5000
        enabled:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

tags:
  - name: System
    description: System health and status endpoints
  - name: Authentication
    description: API key management and authentication
  - name: Memory
    description: Memory storage and retrieval operations
  - name: Chat
    description: Chat conversation import and export
  - name: Integrations
    description: Webhook and plugin management
