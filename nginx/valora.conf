# Valora MCP Server Nginx Configuration
# Production reverse proxy configuration

upstream valora_backend {
    # Load balancing across multiple Node.js instances
    server 127.0.0.1:3000 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:3001 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:3002 weight=1 max_fails=3 fail_timeout=30s;
    
    # Keep connections alive
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

# Security headers
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name valora.yourdomain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name valora.yourdomain.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/valora.crt;
    ssl_certificate_key /etc/ssl/private/valora.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client Max Body Size
    client_max_body_size 10M;
    
    # Proxy Settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Health Check (No rate limiting)
    location /health {
        proxy_pass http://valora_backend;
        access_log off;
    }
    
    # API Key Management (Strict rate limiting)
    location /api-keys {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://valora_backend;
        
        # Additional security for admin endpoints
        location ~ ^/api-keys/([^/]+)$ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://valora_backend;
        }
    }
    
    # Memory Operations (Standard rate limiting)
    location /memory {
        limit_req zone=api burst=50 nodelay;
        proxy_pass http://valora_backend;
    }
    
    # Integration Endpoints (Standard rate limiting)
    location /integrations {
        limit_req zone=api burst=30 nodelay;
        proxy_pass http://valora_backend;
    }
    
    # Validr Integration (Specific rate limiting)
    location /integrations/validr {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://valora_backend;
    }
    
    # WebSocket Support (for real-time features)
    location /ws {
        proxy_pass http://valora_backend;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # Static Files (if any)
    location /static {
        alias /var/www/valora/static;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Default API routes
    location / {
        limit_req zone=api burst=100 nodelay;
        proxy_pass http://valora_backend;
    }
    
    # Error Pages
    error_page 404 /404.json;
    error_page 500 502 503 504 /50x.json;
    
    location = /404.json {
        internal;
        default_type application/json;
        return 404 '{"error":"Not Found","code":"NOT_FOUND"}';
    }
    
    location = /50x.json {
        internal;
        default_type application/json;
        return 500 '{"error":"Internal Server Error","code":"INTERNAL_ERROR"}';
    }
    
    # Logging
    access_log /var/log/nginx/valora_access.log;
    error_log /var/log/nginx/valora_error.log;
}

# HTTP/2 Server Push (Optional)
server {
    listen 443 ssl http2;
    server_name valora.yourdomain.com;
    
    # Server push for critical resources
    location = /health {
        http2_push /api-keys/me;
        proxy_pass http://valora_backend;
    }
}
